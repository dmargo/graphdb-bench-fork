%!PS-Adobe-2.0
%%Title: get_shortest_path_getcount.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Fri Apr 13 15:00:34 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (get_shortest_path_getcount.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (dmargo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Apr 13 15:00:34 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
854 448 M
63 0 V
6030 0 R
-63 0 V
stroke
770 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
854 1333 M
63 0 V
6030 0 R
-63 0 V
stroke
770 1333 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2e+07)]
] -46.7 MRshow
1.000 UL
LTb
854 2217 M
63 0 V
6030 0 R
-63 0 V
stroke
770 2217 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4e+07)]
] -46.7 MRshow
1.000 UL
LTb
854 3102 M
63 0 V
6030 0 R
-63 0 V
stroke
770 3102 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6e+07)]
] -46.7 MRshow
1.000 UL
LTb
854 3986 M
63 0 V
6030 0 R
-63 0 V
stroke
770 3986 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8e+07)]
] -46.7 MRshow
1.000 UL
LTb
854 4871 M
63 0 V
6030 0 R
-63 0 V
stroke
770 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e+08)]
] -46.7 MRshow
1.000 UL
LTb
854 448 M
0 63 V
0 4360 R
0 -63 V
stroke
854 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2073 448 M
0 63 V
0 4360 R
0 -63 V
stroke
2073 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
3291 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3291 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
4510 448 M
0 63 V
0 4360 R
0 -63 V
stroke
4510 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MCshow
1.000 UL
LTb
5728 448 M
0 63 V
0 4360 R
0 -63 V
stroke
5728 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 800)]
] -46.7 MCshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
854 4871 N
854 448 L
6093 0 V
0 4423 V
-6093 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Time \(nanoseconds\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3900 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (GetNeighborsOp Count)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6296 4738 M
[ [(Helvetica) 140.0 0.0 true true 0 (Real)]
] -46.7 MRshow
LT0
2274 706 Pls
897 450 Pls
891 450 Pls
1165 463 Pls
860 448 Pls
927 452 Pls
945 453 Pls
860 448 Pls
884 450 Pls
860 448 Pls
4918 820 Pls
1086 459 Pls
1396 478 Pls
872 449 Pls
909 451 Pls
970 454 Pls
860 448 Pls
866 449 Pls
860 448 Pls
1744 568 Pls
3919 685 Pls
1981 506 Pls
860 448 Pls
897 450 Pls
860 448 Pls
866 449 Pls
860 448 Pls
1238 466 Pls
866 449 Pls
866 449 Pls
866 449 Pls
2298 524 Pls
2347 528 Pls
860 449 Pls
1281 468 Pls
1262 467 Pls
860 448 Pls
866 449 Pls
1019 456 Pls
860 448 Pls
2006 506 Pls
860 448 Pls
860 448 Pls
1427 476 Pls
3742 635 Pls
1140 462 Pls
860 448 Pls
1372 473 Pls
866 449 Pls
872 449 Pls
878 449 Pls
1049 475 Pls
860 449 Pls
2536 538 Pls
4364 694 Pls
878 449 Pls
4589 1145 Pls
866 450 Pls
866 450 Pls
866 450 Pls
866 450 Pls
860 449 Pls
1012 467 Pls
1086 473 Pls
860 449 Pls
860 449 Pls
3364 678 Pls
1543 519 Pls
860 449 Pls
860 448 Pls
860 448 Pls
3108 590 Pls
3346 630 Pls
860 449 Pls
927 452 Pls
860 448 Pls
860 449 Pls
4004 654 Pls
1402 475 Pls
909 451 Pls
909 451 Pls
872 449 Pls
860 448 Pls
866 449 Pls
4120 671 Pls
860 449 Pls
2798 593 Pls
860 449 Pls
878 450 Pls
866 449 Pls
872 449 Pls
6137 988 Pls
1543 484 Pls
860 449 Pls
1207 465 Pls
1530 481 Pls
1183 464 Pls
891 450 Pls
866 449 Pls
897 450 Pls
1025 456 Pls
4077 855 Pls
3431 1369 Pls
1597 537 Pls
860 449 Pls
1098 478 Pls
2530 665 Pls
4589 724 Pls
878 450 Pls
1530 481 Pls
878 449 Pls
872 449 Pls
860 448 Pls
4802 741 Pls
958 453 Pls
3054 693 Pls
884 450 Pls
872 449 Pls
860 448 Pls
878 449 Pls
1159 472 Pls
4948 1067 Pls
860 449 Pls
903 451 Pls
1914 502 Pls
860 448 Pls
3309 659 Pls
897 450 Pls
860 449 Pls
933 452 Pls
860 448 Pls
866 449 Pls
927 452 Pls
5418 854 Pls
860 449 Pls
866 449 Pls
903 450 Pls
878 449 Pls
945 452 Pls
964 453 Pls
860 448 Pls
1086 459 Pls
872 449 Pls
891 450 Pls
4924 1191 Pls
970 495 Pls
860 449 Pls
860 449 Pls
860 449 Pls
927 457 Pls
878 451 Pls
866 450 Pls
897 453 Pls
1908 577 Pls
4906 841 Pls
1561 483 Pls
903 451 Pls
3182 587 Pls
4948 773 Pls
860 449 Pls
951 453 Pls
860 448 Pls
897 450 Pls
860 448 Pls
860 448 Pls
4955 861 Pls
860 449 Pls
872 449 Pls
1153 463 Pls
860 448 Pls
866 449 Pls
2725 552 Pls
903 451 Pls
897 450 Pls
2822 593 Pls
1603 485 Pls
866 449 Pls
897 450 Pls
1000 455 Pls
5022 764 Pls
891 450 Pls
872 449 Pls
860 448 Pls
2341 528 Pls
1104 460 Pls
884 450 Pls
6228 1294 Pls
872 449 Pls
1695 509 Pls
860 449 Pls
3523 1254 Pls
897 450 Pls
878 449 Pls
903 451 Pls
866 449 Pls
1908 502 Pls
860 448 Pls
860 448 Pls
1999 507 Pls
897 450 Pls
866 449 Pls
860 448 Pls
866 449 Pls
939 452 Pls
860 448 Pls
1183 468 Pls
884 450 Pls
1116 461 Pls
866 449 Pls
860 448 Pls
1098 459 Pls
866 449 Pls
860 448 Pls
897 450 Pls
872 449 Pls
3785 643 Pls
860 449 Pls
2895 561 Pls
860 448 Pls
860 448 Pls
872 449 Pls
860 448 Pls
4260 676 Pls
1603 486 Pls
1268 468 Pls
860 448 Pls
878 449 Pls
1597 486 Pls
909 451 Pls
1006 455 Pls
866 449 Pls
860 448 Pls
866 449 Pls
1116 461 Pls
860 448 Pls
909 451 Pls
1573 582 Pls
6533 1264 Pls
860 449 Pls
878 449 Pls
1372 473 Pls
921 451 Pls
860 448 Pls
1177 473 Pls
1987 536 Pls
988 460 Pls
884 450 Pls
2176 528 Pls
1201 465 Pls
860 448 Pls
872 449 Pls
3639 826 Pls
860 449 Pls
897 450 Pls
860 448 Pls
897 451 Pls
860 449 Pls
860 448 Pls
1603 816 Pls
4382 816 Pls
3431 859 Pls
2725 554 Pls
872 449 Pls
878 449 Pls
860 448 Pls
884 450 Pls
860 448 Pls
872 449 Pls
897 450 Pls
860 448 Pls
860 448 Pls
4449 697 Pls
872 449 Pls
1079 459 Pls
921 451 Pls
4327 714 Pls
860 449 Pls
866 449 Pls
860 448 Pls
872 449 Pls
860 448 Pls
891 450 Pls
866 449 Pls
2249 524 Pls
1086 459 Pls
872 449 Pls
4741 731 Pls
5180 794 Pls
1415 483 Pls
897 451 Pls
872 449 Pls
909 451 Pls
860 448 Pls
5308 939 Pls
860 449 Pls
897 450 Pls
4278 1503 Pls
866 449 Pls
860 448 Pls
884 450 Pls
878 449 Pls
860 448 Pls
1201 465 Pls
860 448 Pls
860 448 Pls
866 449 Pls
860 448 Pls
4827 779 Pls
860 449 Pls
897 450 Pls
860 448 Pls
860 448 Pls
866 449 Pls
860 448 Pls
1646 488 Pls
860 448 Pls
1549 483 Pls
1153 462 Pls
872 449 Pls
872 449 Pls
1025 456 Pls
1134 462 Pls
866 449 Pls
2097 516 Pls
860 449 Pls
860 448 Pls
2316 536 Pls
897 450 Pls
860 448 Pls
866 449 Pls
872 449 Pls
872 449 Pls
3468 739 Pls
860 449 Pls
860 448 Pls
860 448 Pls
2347 540 Pls
2530 539 Pls
860 449 Pls
866 449 Pls
2103 513 Pls
2359 644 Pls
860 449 Pls
860 448 Pls
860 448 Pls
860 448 Pls
866 449 Pls
872 449 Pls
860 448 Pls
1999 508 Pls
860 449 Pls
860 448 Pls
1951 505 Pls
2298 524 Pls
951 453 Pls
1987 507 Pls
860 449 Pls
866 449 Pls
897 450 Pls
866 449 Pls
860 448 Pls
1311 470 Pls
866 449 Pls
866 449 Pls
2103 748 Pls
884 450 Pls
860 448 Pls
1634 503 Pls
1402 475 Pls
1238 466 Pls
1049 457 Pls
860 448 Pls
860 448 Pls
2335 1128 Pls
866 449 Pls
1012 458 Pls
872 449 Pls
872 449 Pls
921 452 Pls
860 449 Pls
860 449 Pls
860 449 Pls
860 449 Pls
872 449 Pls
1128 465 Pls
860 449 Pls
878 450 Pls
891 450 Pls
860 449 Pls
1061 461 Pls
860 449 Pls
2298 546 Pls
1457 492 Pls
5661 902 Pls
903 451 Pls
3955 1002 Pls
4918 892 Pls
860 449 Pls
866 449 Pls
921 451 Pls
860 448 Pls
1012 456 Pls
933 452 Pls
3029 709 Pls
4211 685 Pls
860 449 Pls
2006 508 Pls
1238 467 Pls
4626 1243 Pls
1634 489 Pls
1201 465 Pls
866 449 Pls
860 449 Pls
860 448 Pls
866 449 Pls
884 450 Pls
860 448 Pls
1987 647 Pls
878 450 Pls
872 450 Pls
2146 517 Pls
860 449 Pls
878 449 Pls
1049 457 Pls
860 448 Pls
3639 622 Pls
1463 478 Pls
909 451 Pls
884 450 Pls
958 453 Pls
860 448 Pls
2822 625 Pls
1012 456 Pls
939 452 Pls
872 449 Pls
2785 557 Pls
860 449 Pls
891 450 Pls
1153 462 Pls
1104 460 Pls
1031 457 Pls
2725 552 Pls
1354 479 Pls
860 449 Pls
2798 561 Pls
4211 676 Pls
927 452 Pls
1421 475 Pls
860 448 Pls
897 450 Pls
860 448 Pls
2822 877 Pls
982 454 Pls
1348 472 Pls
1025 456 Pls
866 449 Pls
4559 1226 Pls
866 449 Pls
970 455 Pls
4650 923 Pls
866 449 Pls
860 449 Pls
860 449 Pls
903 451 Pls
982 455 Pls
860 449 Pls
982 455 Pls
860 449 Pls
2828 704 Pls
5607 970 Pls
860 449 Pls
866 449 Pls
1914 502 Pls
860 448 Pls
2444 534 Pls
2548 544 Pls
1012 455 Pls
891 450 Pls
884 450 Pls
903 450 Pls
909 451 Pls
878 449 Pls
872 449 Pls
884 450 Pls
6319 1211 Pls
4297 1196 Pls
860 449 Pls
1494 483 Pls
2755 558 Pls
878 449 Pls
872 449 Pls
2444 579 Pls
921 451 Pls
860 448 Pls
4449 699 Pls
994 455 Pls
860 448 Pls
860 448 Pls
897 450 Pls
860 448 Pls
6579 4738 Pls
% End plot #1
% Begin plot #2
1.000 UL
LT1
LCb setrgbcolor
6296 4598 M
[ [(Helvetica) 140.0 0.0 true true 0 (Fitted)]
] -46.7 MRshow
LT1
6380 4598 M
399 0 V
912 448 M
4 0 V
61 7 V
62 8 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 8 V
61 7 V
62 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 8 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 8 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 8 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
62 8 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
61 7 V
62 7 V
% End plot #2
% Begin plot #3
stroke
LT2
LCb setrgbcolor
6296 4458 M
[ [(Helvetica) 140.0 0.0 true true 0 (Predicted)]
] -46.7 MRshow
LT2
6380 4458 M
399 0 V
896 448 M
20 3 V
61 10 V
62 10 V
61 9 V
62 10 V
61 10 V
62 10 V
61 9 V
62 10 V
61 10 V
62 10 V
62 9 V
61 10 V
62 10 V
61 10 V
62 9 V
61 10 V
62 10 V
61 10 V
62 9 V
61 10 V
62 10 V
62 10 V
61 9 V
62 10 V
61 10 V
62 10 V
61 9 V
62 10 V
61 10 V
62 10 V
61 9 V
62 10 V
62 10 V
61 10 V
62 9 V
61 10 V
62 10 V
61 9 V
62 10 V
61 10 V
62 10 V
61 9 V
62 10 V
62 10 V
61 10 V
62 9 V
61 10 V
62 10 V
61 10 V
62 9 V
61 10 V
62 10 V
61 10 V
62 9 V
62 10 V
61 10 V
62 10 V
61 9 V
62 10 V
61 10 V
62 10 V
61 9 V
62 10 V
61 10 V
62 10 V
62 9 V
61 10 V
62 10 V
61 10 V
62 9 V
61 10 V
62 10 V
61 10 V
62 9 V
61 10 V
62 10 V
62 10 V
61 9 V
62 10 V
61 10 V
62 10 V
61 9 V
62 10 V
61 10 V
62 10 V
61 9 V
62 10 V
62 10 V
61 10 V
62 9 V
61 10 V
62 10 V
61 10 V
62 9 V
61 10 V
62 10 V
61 10 V
62 9 V
% End plot #3
stroke
LTb
854 4871 N
854 448 L
6093 0 V
0 4423 V
-6093 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
